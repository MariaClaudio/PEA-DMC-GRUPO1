# -*- coding: utf-8 -*-
"""Proyecto dmc.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19mFdqbY9VCySHRUd-lZK-QLZLBBqA5q9
"""

#!pip install mysql-connector #Eliminar comentario en caso de no tener instalada esta librería. No es necesario importarla

#!pip install --upgrade 'sqlalchemy<2.0'

#!pip install google-cloud-storage

###0. Librerías

import pandas as pd
import sqlalchemy
from sqlalchemy import create_engine, text


###1. Conexión a BBDD

db_username = 'dmcfinal' #Usuario externo que hemos creado
db_password = '1502894107' #Contraseña del usuario externo
db_ip = '35.198.12.55' #IP externa de la instancia
db_name = 'proyectofinaldmc'

s = 'mysql+mysqlconnector://{0}:{1}@{2}/{3}'.format(db_username, db_password, db_ip, db_name)

engine = sqlalchemy.create_engine(s)

## GENERAR DATAFRAMES 

data_group_booking_request = pd.read_sql('SELECT * FROM group_booking_request WHERE id_request<>0', engine)
data_group_booking_request_movement = pd.read_sql('SELECT * FROM group_booking_request_movement WHERE id_request_movement<>0', engine)

#GENERAR CSV
data_group_booking_request.to_csv('data_group_booking_request.csv', sep=',', index=False)
data_group_booking_request_movement.to_csv('data_group_booking_request_movement.csv', sep=',', index=False)

import os
from google.cloud import storage

# Obtiene la ruta absoluta del archivo de credenciales en la carpeta actual
credenciales_path = os.path.join(os.getcwd(), "credentials_new.json")

# Establece la variable de entorno "GOOGLE_APPLICATION_CREDENTIALS" con la ruta absoluta del archivo de credenciales
os.environ["GOOGLE_APPLICATION_CREDENTIALS"] = credenciales_path

client = storage.Client()
bucket = client.bucket('it-analytics-inventory-387221-dev')

carpeta = 'ETL'

## CARGAR ARCHIVO 1
data_group_booking_request_csv=os.path.join(os.getcwd(), "data_group_booking_request.csv")
nombre_blob = f'{carpeta}/data_group_booking_request.csv'
blob = bucket.blob(nombre_blob)
blob.upload_from_filename(data_group_booking_request_csv)

## CARGAR ARCHIVO 2
data_group_booking_request_movement_csv=os.path.join(os.getcwd(), "data_group_booking_request_movement.csv")
nombre_blob = f'{carpeta}/data_group_booking_request_movement.csv'
blob = bucket.blob(nombre_blob)
blob.upload_from_filename(data_group_booking_request_movement_csv)



print('archivo subido al bucket')